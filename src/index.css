@font-face {
  font-family: "Notch Grotesk";
  font-weight: 300;
  src: url("./assets/fonts/NotchGrotesk-Light.ttf") format("truetype");
}

@font-face {
  font-family: "Notch Grotesk";
  font-weight: 500;
  src: url("./assets/fonts/NotchGrotesk-Regular.ttf") format("truetype");
}

@font-face {
  font-family: "Notch Grotesk";
  font-weight: 700;
  src: url("./assets/fonts/NotchGrotesk-Bold.ttf") format("truetype");
}

:root {
  /* Colors */
  --color-bg: #1a1a1a;
  --color-text: #fff;

  /* Font sizes */
  --font-xs: 14px;
  --font-sm: 16px;
  --font-md: 20px;
  --font-lg: 24px;
  --font-xl: 32px;
  --font-xxl: 56px;

  /* Responsive scaling */
  --font-size-xs: clamp(10px, 1vw + 8px, var(--font-xs));
  --font-size-sm: clamp(12px, 1vw + 10px, var(--font-sm));
  --font-size-md: clamp(14px, 1.2vw + 10px, var(--font-md));
  --font-size-lg: clamp(16px, 1.5vw + 12px, var(--font-lg));
  --font-size-xl: clamp(20px, 2vw + 14px, var(--font-xl));
  --font-size-xxl: clamp(24px, 2.5vw + 16px, var(--font-xxl));

  --animation-primary: all 0.5s cubic-bezier(0.7, 0, 0.3, 1);
  --animation-fast: all 0.3s cubic-bezier(0.7, 0, 0.3, 1);
  --animation-smooth: all 0.7s cubic-bezier(0.7, 0, 0.3, 1);
  --animation-slow: all 0.9s cubic-bezier(0.7, 0, 0.3, 1);
}

*,
*:after,
*:before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body,
html {
  width: 100%;
  height: 100%;
  background-color: var(--color-bg);
  color: var(--color-text);
  font-family: "Notch Grotesk", serif;
  font-size: var(--font-size-sm);
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  scroll-behavior: initial;
}

img,
video,
picture,
figure,
canvas {
  max-width: 100%;
  height: auto;
  display: block;
  box-sizing: border-box;
}

svg {
  height: auto;
  box-sizing: border-box;
}

ul,
li {
  list-style: none;
}

h1 {
  font-size: var(--font-size-xxl);
  line-height: 100%;
}

h2 {
  font-size: var(--font-size-xl);
}
h3 {
  font-size: var(--font-size-lg);
}

p,
a,
li {
  font-size: var(--font-size-md);
  font-weight: lighter;
  line-height: 125%;
}

a {
  text-decoration: none;
  color: inherit;
}

.btn,
button {
  padding: 10px 20px;
  font-size: 14px;
  background-color: transparent;
  border-radius: 100px;
  transition: 0.3s;
  font-weight: 300;
  cursor: pointer;
}

.btn {
  border: 1px solid black;
}

.btn:hover {
  background-color: black;
  color: white;
}

button {
  color: var(--color-text);
  background-color: rgba(255, 255, 255, 0.125);
  border-radius: 2em;
}

button:hover {
  background-color: rgba(255, 255, 255, 0.25);
}

.text-xs {
  font-size: var(--font-size-xs);
}
.text-sm {
  font-size: var(--font-size-sm);
}
.text-md {
  font-size: var(--font-size-md);
}
.text-lg {
  font-size: var(--font-size-lg);
}
.text-xl {
  font-size: var(--font-size-xl);
}
.text-xxl {
  font-size: var(--font-size-xxl);
}

/* Distances */
:root {
  /* Fluid paddings & margins (min values) */
  --distance-min-xxsmall: 20;
  --distance-min-xsmall: 30;
  --distance-min-small: 40;
  --distance-min-medium: 40;
  --distance-min-large: 50;
  --distance-min-xlarge: 90;
  /* Fluid paddings & margins (max values) */
  --distance-max-xxsmall: 30;
  --distance-max-xsmall: 40;
  --distance-max-small: 80;
  --distance-max-medium: 120;
  --distance-max-large: 180;
  --distance-max-xlarge: 240;
  /* Container & page gutters */
  --gutter-horizontal-min: 20;
  --gutter-horizontal-max: 120;
  --gutter-vertical-min: 20;
  --gutter-vertical-max: 80;
  --gutter-horizontal: calc(1 * var(--gutter-horizontal-min) * 1px);
  --gutter-vertical: calc(1 * var(--gutter-vertical-min) * 1px);
  /* Bootstrap */
  --bs-gutter-x: 20px;
  --bs-gutter-y: 20px;
}
@media screen and (min-width: 360px) {
  :root {
    --gutter-horizontal: calc(
      1 *
        (
          var(--gutter-horizontal-min) * 1px +
            (var(--gutter-horizontal-max) - var(--gutter-horizontal-min)) *
            (100vw - 360px) / 1560
        )
    );
  }
}
@media screen and (min-width: 1920px) {
  :root {
    --gutter-horizontal: calc(1 * var(--gutter-horizontal-max) * 1px);
  }
}
@media screen and (min-width: 360px) {
  :root {
    --gutter-vertical: calc(
      1 *
        (
          var(--gutter-vertical-min) * 1px +
            (var(--gutter-vertical-max) - var(--gutter-vertical-min)) *
            (100vw - 360px) / 1560
        )
    );
  }
}
@media screen and (min-width: 1920px) {
  :root {
    --gutter-vertical: calc(1 * var(--gutter-vertical-max) * 1px);
  }
}
